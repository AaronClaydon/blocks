{
    "name": "puzzles1_2",
    "description": "First test of the puzzles framework, contains completion steps",
    "steps": {
        "step1": {
            "title": "Basic step",
            "description": "I have no success condition"
        },
        "step2": {
            "title": "Call double",
            "description": "Call the double function in your test",
            "successCondition": {
                "event": "contains_block",
                "workspace": "test",
                "equality": {
                    "type": "procedures_callreturn",
                    "function_name": "double"
                }
            },
            "completed": false
        },
        "step3": {
            "title": "Test and assert the double function in the first test",
            "description": "Call the double function in your test and assert its result",
            "successCondition": {
                "event": "block_has_input",
                "workspace": "test",
                "parent": {
                    "type": "assert"
                },
                "input": {
                    "type": "procedures_callreturn",
                    "function_name": "double"
                }
            },
            "completed": false
        },
        "step4": {
            "title": "Create another test",
            "description": "Create a second test",
            "successCondition": {
                "event": "update_tests",
                "equality": {
                    "numTests": 2
                }
            },
            "completed": false
        },
        "step5": {
            "title": "Call triple",
            "description": "Call the triple function in your test",
            "successCondition": {
                "event": "contains_block",
                "workspace": "test",
                "equality": {
                    "type": "procedures_callreturn",
                    "function_name": "triple"
                }
            },
            "completed": false
        },
        "step6": {
            "title": "Test and assert the triple function in the second test",
            "description": "Call the triple function in your test and assert its result",
            "successCondition": {
                "event": "block_has_input",
                "workspace": "test",
                "parent": {
                    "type": "assert"
                },
                "input": {
                    "type": "procedures_callreturn",
                    "function_name": "triple"
                }
            },
            "completed": false
        },
        "step7": {
            "title": "Tests assert as true",
            "description": "Both tests assert as true",
            "successCondition": {
                "event": "tests_result",
                "equality": {
                    "numTests": 2,
                    "numPassed": 2
                },
                "prerequisite": ["step3", "step4", "step6"]
            },
            "completed": false
        }
    },
    "applicationCode": "<xml xmlns=\"http://www.w3.org/1999/xhtml\"><block type=\"procedures_defreturn\" x=\"0\" y=\"0\"><mutation><arg name=\"x\"></arg></mutation><field name=\"NAME\">double</field><comment pinned=\"false\" h=\"80\" w=\"160\">Doubles and returns a given value</comment><statement name=\"STACK\"><block type=\"variables_set\"><field name=\"VAR\">returnValue</field><value name=\"VALUE\"><block type=\"math_arithmetic\"><field name=\"OP\">MULTIPLY</field><value name=\"A\"><block type=\"variables_get\"><field name=\"VAR\">x</field></block></value><value name=\"B\"><block type=\"math_number\"><field name=\"NUM\">2</field></block></value></block></value></block></statement><value name=\"RETURN\"><block type=\"variables_get\"><field name=\"VAR\">returnValue</field></block></value></block><block type=\"procedures_defreturn\" x=\"0\" y=\"100\"><mutation><arg name=\"x\"></arg></mutation><field name=\"NAME\">triple</field><comment pinned=\"false\" h=\"80\" w=\"160\">Triple and returns a given value</comment><statement name=\"STACK\"><block type=\"variables_set\"><field name=\"VAR\">returnValue</field><value name=\"VALUE\"><block type=\"math_arithmetic\"><field name=\"OP\">MULTIPLY</field><value name=\"A\"><block type=\"variables_get\"><field name=\"VAR\">x</field></block></value><value name=\"B\"><block type=\"math_number\"><field name=\"NUM\">3</field></block></value></block></value></block></statement><value name=\"RETURN\"><block type=\"variables_get\"><field name=\"VAR\">returnValue</field></block></value></block></xml>",
    "tests": {
        "sfjd9": {
            "name": "Test 1",
            "testCode": "<xml xmlns=\"http://www.w3.org/1999/xhtml\"><block type=\"assert\" x=\"4\" y=\"6\"><value name=\"ASSERT_SUCCESS_VALUE\"><block type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></block></value><value name=\"ASSERT_SUCCESS_IF\"><block type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></block></value></block></xml>",
            "formattedResult": "\n                    <span class=\"bg-success\">SUCCESS</span>\n        "
        },
        "R=Q#rA7TR`EPnPyKNis|": {
            "name": "Test 2",
            "testCode": "<xml xmlns=\"http://www.w3.org/1999/xhtml\"><block type=\"assert\" x=\"8\" y=\"6\"><value name=\"ASSERT_SUCCESS_VALUE\"><block type=\"logic_compare\"><field name=\"OP\">EQ</field><value name=\"A\"><block type=\"math_number\"><field name=\"NUM\">30</field></block></value><value name=\"B\"><block type=\"procedures_callreturn\"><mutation name=\"triple\"><arg name=\"x\"></arg></mutation><value name=\"ARG0\"><block type=\"math_number\"><field name=\"NUM\">10</field></block></value></block></value></block></value><value name=\"ASSERT_SUCCESS_IF\"><block type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></block></value></block></xml>",
            "formattedResult": "\n                    <span class=\"bg-success\">SUCCESS</span>\n        "
        }
    },
    "options": {
        "applicationCodeVisible": true,
        "applicationCodeEditable": true,
        "testCodeEditable": true,
        "testListEditable": true
    }
}
