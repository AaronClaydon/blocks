{
    "id": "multipleComponents",
    "name": "Multiple components",
    "description": "There are many components in this application that need to be tested",
    "isPuzzle": true,
    "isPublished": true,
    "steps": {
        "`_dAI(by?TOAHc_KT`RO": {
            "title": "test_double",
            "description": "",
            "visibility": "not_visible",
            "order": "0",
            "sticky": false,
            "successCondition": {
                "event": "block_has_input",
                "workspace": "test",
                "parent": {
                    "type": "assert"
                },
                "input": {
                    "type": "procedures_callreturn",
                    "function_name": "double"
                }
            }
        },
        "+HBnr}fv2uQp#/c~*EA?": {
            "title": "test_triple",
            "description": "",
            "visibility": "not_visible",
            "order": "1",
            "sticky": false,
            "successCondition": {
                "event": "block_has_input",
                "workspace": "test",
                "parent": {
                    "type": "assert"
                },
                "input": {
                    "type": "procedures_callreturn",
                    "function_name": "triple"
                }
            }
        },
        "Z|0)`$!!}tujjon{lV`M": {
            "title": "Test functions",
            "description": "Test the double & triple functions\n<br/><br/>\nAs you won't be dealing with the input/output of the application you need to add a 'ignore unhandled prompts' block into those tests to prevent them automatically failing",
            "visibility": "visible",
            "order": "2",
            "sticky": false,
            "successCondition": {
                "event": "tests_result",
                "equality": {
                    "allPassed": "TRUE"
                },
                "prerequisite": [
                    "`_dAI(by?TOAHc_KT`RO",
                    "+HBnr}fv2uQp#/c~*EA?"
                ]
            }
        },
        ";=b|4-$W|!64ML6!L92G": {
            "title": "Specific output",
            "description": "Make the application print 'The double of 50 is 100'",
            "visibility": "visible",
            "order": "3",
            "sticky": false,
            "successCondition": {
                "event": "print_output",
                "equality": {
                    "string": "The double of 50 is 100"
                }
            }
        },
        "+re-9+dqM}g%g!Zb|)X.": {
            "title": "Variable value",
            "description": "Make the variable 'tripleReturn' have the value 99",
            "visibility": "visible",
            "order": "4",
            "sticky": false,
            "successCondition": {
                "event": "final_variable_value",
                "equality": {
                    "name": "tripleReturn",
                    "variable_type": "number",
                    "value": "99"
                }
            }
        },
        "|j:+,#O)xM{Nc]0xJk6|": {
            "title": "Test I/O",
            "description": "Provide 2 prompt values in a test",
            "visibility": "visible",
            "order": "5",
            "sticky": false,
            "successCondition": {
                "event": "block_has_input",
                "workspace": "test",
                "parent": {
                    "type": "simulate_input",
                    "numInputs": "2"
                },
                "input": {}
            }
        },
        "Pma[0oyLNHMe0/eZ[$.C": {
            "title": "Test application",
            "description": "Fully test the application",
            "visibility": "visible",
            "order": "6",
            "sticky": false,
            "successCondition": {
                "event": "tests_result",
                "equality": {
                    "allPassed": "TRUE"
                },
                "prerequisite": [
                    "`_dAI(by?TOAHc_KT`RO",
                    "+HBnr}fv2uQp#/c~*EA?",
                    "Z|0)`$!!}tujjon{lV`M",
                    ";=b|4-$W|!64ML6!L92G",
                    "+re-9+dqM}g%g!Zb|)X.",
                    "|j:+,#O)xM{Nc]0xJk6|"
                ]
            }
        }
    },
    "applicationCode": "<xml xmlns=\"http://www.w3.org/1999/xhtml\"><block type=\"procedures_defreturn\" x=\"0\" y=\"0\"><mutation><arg name=\"x\"></arg></mutation><field name=\"NAME\">double</field><comment pinned=\"false\" h=\"80\" w=\"160\">Doubles and returns a given value</comment><statement name=\"STACK\"><block type=\"variables_set\"><field name=\"VAR\">doubleReturn</field><value name=\"VALUE\"><block type=\"math_arithmetic\"><field name=\"OP\">MULTIPLY</field><value name=\"A\"><block type=\"variables_get\"><field name=\"VAR\">x</field></block></value><value name=\"B\"><block type=\"math_number\"><field name=\"NUM\">2</field></block></value></block></value></block></statement><value name=\"RETURN\"><block type=\"variables_get\"><field name=\"VAR\">doubleReturn</field></block></value></block><block type=\"procedures_defreturn\" x=\"0\" y=\"100\"><mutation><arg name=\"x\"></arg></mutation><field name=\"NAME\">triple</field><comment pinned=\"false\" h=\"80\" w=\"160\">Triple and returns a given value</comment><statement name=\"STACK\"><block type=\"variables_set\"><field name=\"VAR\">tripleReturn</field><value name=\"VALUE\"><block type=\"math_arithmetic\"><field name=\"OP\">MULTIPLY</field><value name=\"A\"><block type=\"variables_get\"><field name=\"VAR\">x</field></block></value><value name=\"B\"><block type=\"math_number\"><field name=\"NUM\">3</field></block></value></block></value></block></statement><value name=\"RETURN\"><block type=\"variables_get\"><field name=\"VAR\">tripleReturn</field></block></value></block><block type=\"variables_set\" x=\"1\" y=\"201\"><field name=\"VAR\">inputValue</field><value name=\"VALUE\"><block type=\"text_prompt_ext\"><mutation type=\"NUMBER\"></mutation><field name=\"TYPE\">NUMBER</field><value name=\"TEXT\"><shadow type=\"text\"><field name=\"TEXT\">abc</field></shadow><block type=\"text\"><field name=\"TEXT\">Enter a number to double</field></block></value></block></value><next><block type=\"text_print\"><value name=\"TEXT\"><shadow type=\"text\"><field name=\"TEXT\">abc</field></shadow><block type=\"text_join\"><mutation items=\"4\"></mutation><value name=\"ADD0\"><block type=\"text\"><field name=\"TEXT\">The double of </field></block></value><value name=\"ADD1\"><block type=\"variables_get\"><field name=\"VAR\">inputValue</field></block></value><value name=\"ADD2\"><block type=\"text\"><field name=\"TEXT\"> is </field></block></value><value name=\"ADD3\"><block type=\"procedures_callreturn\"><mutation name=\"double\"><arg name=\"x\"></arg></mutation><value name=\"ARG0\"><block type=\"variables_get\"><field name=\"VAR\">inputValue</field></block></value></block></value></block></value><next><block type=\"variables_set\"><field name=\"VAR\">inputValue</field><value name=\"VALUE\"><block type=\"text_prompt_ext\"><mutation type=\"NUMBER\"></mutation><field name=\"TYPE\">NUMBER</field><value name=\"TEXT\"><shadow type=\"text\"><field name=\"TEXT\">abc</field></shadow><block type=\"text\"><field name=\"TEXT\">Enter a number to triple</field></block></value></block></value><next><block type=\"text_print\"><value name=\"TEXT\"><shadow type=\"text\"><field name=\"TEXT\">abc</field></shadow><block type=\"text_join\"><mutation items=\"4\"></mutation><value name=\"ADD0\"><block type=\"text\"><field name=\"TEXT\">The triple of </field></block></value><value name=\"ADD1\"><block type=\"variables_get\"><field name=\"VAR\">inputValue</field></block></value><value name=\"ADD2\"><block type=\"text\"><field name=\"TEXT\"> is </field></block></value><value name=\"ADD3\"><block type=\"procedures_callreturn\"><mutation name=\"triple\"><arg name=\"x\"></arg></mutation><value name=\"ARG0\"><block type=\"variables_get\"><field name=\"VAR\">inputValue</field></block></value></block></value></block></value></block></next></block></next></block></next></block></xml>",
    "tests": {
        "defaul1": {
            "name": "Test 1",
            "testCode": "<xml xmlns=\"http://www.w3.org/1999/xhtml\"></xml>"
        }
    },
    "options": {
        "applicationCodeVisible": true,
        "applicationCodeEditable": false,
        "testCodeVisible": true,
        "testCodeEditable": true,
        "testListEditable": true
    }
}
